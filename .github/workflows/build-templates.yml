name: Build template
on:
  push:
    paths:
      - '.github/workflows/build-templates.yml'
      - 'packages/create-react-native-library/**'
      - '!**.md'

jobs:
  build:
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
        type:
          - module-legacy
          - module-mixed
          - module-new
          - view-legacy
          - view-mixed
          - view-new
        language:
          - java-objc
          - java-swift
          - kotlin-objc
          - kotlin-swift
        exclude:
          - os: macos
            language: kotlin-objc
          - os: macos
            language: kotlin-swift
          - type: module-new
            language: java-swift
          - type: module-new
            language: kotlin-swift
          - type: module-mixed
            language: java-swift
          - type: module-mixed
            language: kotlin-swift
          - type: view-new
            language: java-swift
          - type: view-new
            language: kotlin-swift
          - type: view-mixed
            language: java-swift
          - type: view-mixed
            language: kotlin-swift
        include:
          - os: ubuntu
            type: library
            language: js
          - os: ubuntu
            type: module-legacy
            language: cpp
          - os: ubuntu
            type: module-mixed
            language: cpp
          - os: ubuntu
            type: module-new
            language: cpp
          - os: macos
            type: module-legacy
            language: cpp
          - os: macos
            type: module-mixed
            language: cpp
          - os: macos
            type: module-new
            language: cpp

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}-${{ matrix.type }}-${{ matrix.language }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: |
          yarn workspace create-react-native-library prepare

      - name: Configure environment
        run: |
          echo "work_dir=tmp-${{ matrix.type }}-${{ matrix.language }}" >> $GITHUB_ENV

          # Build Android for only some matrices to skip redundant builds
          if [[ ${{ matrix.os }} == ubuntu ]]; then
            if [[ ${{ matrix.type }} == view-* && ${{ matrix.language }} == *-objc ]] || [[ ${{ matrix.type }} == module-* && ${{ matrix.language }} == *-objc ]] || [[ ${{ matrix.type }} == module-* && ${{ matrix.language }} == cpp ]]; then
              echo "build_android=1" >> $GITHUB_ENV
            fi
          fi

          # Build iOS for only some matrices to skip redundant builds
          if [[ ${{ matrix.os }} == macos ]]; then
            if [[ ${{ matrix.type }} == view-* && ${{ matrix.language }} == java-* ]] || [[ ${{ matrix.type }} == module-* && ${{ matrix.language }} == java-* ]] || [[ ${{ matrix.type }} == module-* && ${{ matrix.language }} == cpp ]]; then
              echo "build_ios=1" >> $GITHUB_ENV
            fi
          fi

      - name: Create library
        run: |
          ./packages/create-react-native-library/bin/create-react-native-library ${{ env.work_dir }} \
            --slug @bob/react-native-test \
            --description test \
            --author-name test \
            --author-email test@test \
            --author-url https://test.test \
            --repo-url https://test.test \
            --type ${{ matrix.type }} \
            --languages ${{ matrix.language }} \
            --turborepo

      - name: Cache dependencies of library
        id: library-yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.work_dir }}/**/node_modules
            ${{ env.work_dir }}/**/yarn.lock
          key: ${{ runner.os }}-library-yarn-${{ hashFiles(format('{0}/**/package.json', env.work_dir)) }}
          restore-keys: |
            ${{ runner.os }}-library-yarn-

      - name: Install dependencies of library
        if: steps.library-yarn-cache.outputs.cache-hit != 'true'
        working-directory: ${{ env.work_dir }}
        run: |
          yarn install --cwd example
          yarn install

      - name: Cache turborepo
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.work_dir }}/.turbo
          key: ${{ runner.os }}-library-turborepo-${{ matrix.type }}-${{ matrix.language }}-${{ hashFiles(format('{0}/**/yarn.lock', env.work_dir)) }}
          restore-keys: |
            ${{ runner.os }}-library-turborepo-${{ matrix.type }}-${{ matrix.language }}-

      - name: Lint library
        if: matrix.os == 'ubuntu'
        working-directory: ${{ env.work_dir }}
        run: |
          yarn lint

      - name: Typecheck library
        if: matrix.os == 'ubuntu'
        working-directory: ${{ env.work_dir }}
        run: |
          yarn typescript

      - name: Test library
        if: matrix.os == 'ubuntu'
        working-directory: ${{ env.work_dir }}
        run: |
          yarn test

      - name: Install JDK
        if: env.build_android == 1
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install NDK
        if: env.build_android == 1
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21d
          local-cache: true

      - name: Finalize Android NDK & SDK
        if: env.build_android == 1
        run: |
          echo "ANDROID_NDK=$ANDROID_HOME/ndk-bundle" >> $GITHUB_ENV
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Cache Gradle
        if: env.build_android == 1
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles(format('{0}/example/android/gradle/wrapper/gradle-wrapper.properties', env.work_dir)) }}

      - name: Cache android libraries
        if: env.build_android == 1
        uses: actions/cache@v3
        with:
          path: ${{ env.work_dir }}/example/android/app/build/react-ndk
          key: ${{ runner.os }}-react-ndk-${{ hashFiles(format('{0}/example/node_modules/react-native/package.json', env.work_dir)) }}

      - name: Build example (Android)
        if: env.build_android == 1
        working-directory: ${{ env.work_dir }}
        run: |
          yarn turbo run build:android --cache-dir=".turbo/cache"

      - name: Cache cocoapods
        if: env.build_ios == 1
        id: library-cocoapods-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.work_dir }}/**/ios/Pods
            ${{ env.work_dir }}/**/ios/Podfile.lock
          key: ${{ runner.os }}-library-cocoapods-${{ env.work_dir }}-${{ hashFiles(format('{0}/**/yarn.lock', env.work_dir)) }}
          restore-keys: |
            ${{ runner.os }}-library-cocoapods-${{ env.work_dir }}-

      - name: Install cocoapods
        if: steps.library-cocoapods-cache.outputs.cache-hit != 'true' && env.build_ios == 1
        working-directory: ${{ env.work_dir }}
        run: |
          yarn example pods

      - name: Cache iOS build artifacts
        if: env.build_ios == 1
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-library-xcode-derived-data-${{ env.work_dir }}-${{ hashFiles(format('{0}/**/yarn.lock', env.work_dir)) }}
          restore-keys: |
            ${{ runner.os }}-library-xcode-derived-data-${{ env.work_dir }}-

      - name: Build example (iOS)
        if: env.build_ios == 1
        working-directory: ${{ env.work_dir }}
        run: |
          yarn turbo run build:ios --cache-dir=".turbo/cache"
